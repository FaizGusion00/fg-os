# ============================================================================
# FG-OS GRUB Configuration
# Phase 3: Bootloader Development
# 
# This file configures GRUB to boot FG-OS with beautiful gradient themes
# and optimal settings for the development environment.
#
# Author: Faiz Nasir
# Company: FGCompany Official
# Version: 1.0.0
# Date: 2024
# Copyright: © 2024 FGCompany Official. All rights reserved.
# ============================================================================

# GRUB Configuration Settings
set timeout=10
set default=0

# Beautiful gradient theme colors for FG-OS
set color_normal=light-blue/black
set color_highlight=white/light-magenta

# Menu title with FG-OS branding
menuentry_id_option="fg-os-title"

# ============================================================================
# FG-OS Boot Menu Entries
# ============================================================================

# Main FG-OS entry
menuentry "FG-OS v1.0.0 - Modern Cross-Platform OS" {
    echo "Loading FG-OS v1.0.0..."
    echo "Phase 3: Bootloader Development"
    echo "Developed by Faiz Nasir - FGCompany Official"
    echo ""
    echo "Initializing beautiful gradient interface..."
    
    # Load the kernel
    multiboot2 /boot/kernel kernel_version=1.0.0 phase=3
    
    # Load initial ramdisk (when available)
    # module2 /boot/initrd.img initrd
    
    echo "Starting FG-OS kernel..."
    boot
}

# Debug mode entry
menuentry "FG-OS v1.0.0 - Debug Mode" {
    echo "Loading FG-OS in Debug Mode..."
    echo "Enhanced logging and debugging enabled"
    echo ""
    
    # Load kernel with debug parameters
    multiboot2 /boot/kernel kernel_version=1.0.0 phase=3 debug=1 log_level=debug
    
    echo "Starting FG-OS kernel in debug mode..."
    boot
}

# Safe mode entry
menuentry "FG-OS v1.0.0 - Safe Mode" {
    echo "Loading FG-OS in Safe Mode..."
    echo "Minimal drivers and basic functionality only"
    echo ""
    
    # Load kernel with safe mode parameters
    multiboot2 /boot/kernel kernel_version=1.0.0 phase=3 safe_mode=1 vga_mode=text
    
    echo "Starting FG-OS kernel in safe mode..."
    boot
}

# Memory test entry
menuentry "Memory Test (Memtest86+)" {
    echo "Starting memory test..."
    echo "This will test your system's RAM for errors"
    
    # Load memtest86+ if available
    linux16 /boot/memtest86+.bin
    boot
}

# ============================================================================
# Advanced Boot Options
# ============================================================================

# Recovery mode
menuentry "FG-OS Recovery Mode" {
    echo "Loading FG-OS Recovery Environment..."
    echo "System recovery and maintenance tools"
    echo ""
    
    multiboot2 /boot/kernel kernel_version=1.0.0 phase=3 recovery=1 init=/bin/recovery
    
    echo "Starting recovery environment..."
    boot
}

# Developer mode
menuentry "FG-OS Developer Mode" {
    echo "Loading FG-OS Developer Environment..."
    echo "Development tools and enhanced debugging"
    echo ""
    
    multiboot2 /boot/kernel kernel_version=1.0.0 phase=3 developer=1 debug=1 profiling=1
    
    echo "Starting developer environment..."
    boot
}

# ============================================================================
# System Information and Utilities
# ============================================================================

# System information
menuentry "System Information" {
    echo "=== FG-OS System Information ==="
    echo ""
    echo "Operating System: FG-OS v1.0.0"
    echo "Development Phase: 3 - Bootloader Development"
    echo "Architecture: x86_64"
    echo "Author: Faiz Nasir"
    echo "Company: FGCompany Official"
    echo "Copyright: © 2024 FGCompany Official"
    echo ""
    echo "Build Information:"
    echo "- Cross-platform compatibility layer"
    echo "- Modern gradient user interface"
    echo "- Professional development environment"
    echo "- Advanced security features"
    echo ""
    echo "Press any key to return to menu..."
    read
}

# Hardware detection
menuentry "Hardware Detection" {
    echo "=== Hardware Detection ==="
    echo ""
    echo "Detecting system hardware..."
    
    # Basic hardware detection commands
    echo "CPU Information:"
    cpuid
    echo ""
    echo "Memory Information:"
    lsmmap
    echo ""
    echo "PCI Devices:"
    lspci
    echo ""
    echo "Press any key to return to menu..."
    read
}

# ============================================================================
# Boot from other devices
# ============================================================================

# Boot from hard disk
menuentry "Boot from Hard Disk" {
    echo "Booting from first hard disk..."
    set root=(hd0)
    chainloader +1
    boot
}

# Boot from USB
menuentry "Boot from USB" {
    echo "Booting from USB device..."
    set root=(usb0)
    chainloader +1
    boot
}

# Boot from network (PXE)
menuentry "Network Boot (PXE)" {
    echo "Attempting network boot..."
    echo "Configuring network interface..."
    
    # PXE boot configuration
    set root=(pxe)
    pxe_default_server
    boot
}

# ============================================================================
# GRUB Utilities
# ============================================================================

# GRUB command line
menuentry "GRUB Command Line" {
    echo "Entering GRUB command line..."
    echo "Type 'help' for available commands"
    echo "Type 'exit' to return to menu"
    
    grub_cmd
}

# Reboot system
menuentry "Reboot" {
    echo "Rebooting system..."
    reboot
}

# Shutdown system
menuentry "Shutdown" {
    echo "Shutting down system..."
    halt --no-apm
}

# ============================================================================
# Hidden/Advanced Entries (for development)
# ============================================================================

if [ "${grub_platform}" == "efi" ]; then
    menuentry "EFI Firmware Setup" {
        echo "Entering EFI firmware setup..."
        fwsetup
    }
fi

# Hidden entry for kernel developers
if [ -f /boot/kernel-dev ]; then
    menuentry "FG-OS Development Kernel" --class os {
        echo "Loading development kernel..."
        multiboot2 /boot/kernel-dev kernel_version=dev phase=3 debug=1 developer=1
        boot
    }
fi

# ============================================================================
# Theme and Visual Configuration
# ============================================================================

# Load FG-OS theme if available
if [ -f ($root)/boot/grub/themes/fgos/theme.txt ]; then
    set theme=($root)/boot/grub/themes/fgos/theme.txt
fi

# Background image for beautiful boot experience
if [ -f ($root)/boot/grub/fgos-background.png ]; then
    background_image ($root)/boot/grub/fgos-background.png
fi

# Custom fonts for better visual experience
if [ -f ($root)/boot/grub/fonts/fgos.pf2 ]; then
    loadfont ($root)/boot/grub/fonts/fgos.pf2
fi

# ============================================================================
# Error Handling and Recovery
# ============================================================================

# If normal boot fails, provide recovery options
function fallback_menu {
    echo "Normal boot failed. Entering recovery mode..."
    
    menuentry "Emergency Shell" {
        echo "Starting emergency shell..."
        set root=(hd0,1)
        linux /boot/kernel init=/bin/sh
        boot
    }
    
    menuentry "Memory Test" {
        echo "Running memory diagnostic..."
        linux16 /boot/memtest86+.bin
        boot
    }
    
    menuentry "Hardware Check" {
        echo "Running hardware diagnostics..."
        # Hardware check commands
        lsmmap
        lspci
        read
    }
}

# Auto-boot timeout with countdown
echo "FG-OS Bootloader - Phase 3: Bootloader Development"
echo "Developed by Faiz Nasir - FGCompany Official"
echo ""
echo "Select boot option or wait for automatic boot..."

# ============================================================================
# End of GRUB Configuration
# ============================================================================ 